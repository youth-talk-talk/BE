plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.server'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

/* openfeign 설정*/
ext {
	springCloudVersion = '2023.0.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'com.h2database:h2' // H2 데이터베이스 의존성 추가 (테스트용)
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE' // s3
	/* mysql 데이터베이스 설정 */
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.mysql:mysql-connector-j'

	// 외부 api 호출
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation "org.bouncycastle:bcpkix-jdk15to18:1.78.1"

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	// JUnit 5 (JUnit Jupiter) 의존성 명시적 선언
//	testImplementation 'org.junit.jupiter:junit-jupiter-api'
//	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
//	testImplementation 'org.mockito:mockito-core'
//	testImplementation 'org.mockito:mockito-junit-jupiter'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyYamlFiles', Copy) {
	from './BE-submodule-data'
	include '*.yml'
	into 'src/main/resources'
}

processResources {
	dependsOn tasks.named('copyYamlFiles')
}